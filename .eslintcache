[{"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\index.js":"1","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\App.js":"2","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\GroupContext.js":"3","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\UndoHistory\\UndoHistory.js":"4","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\TextEditor\\TextEditor.js":"5","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\TopMenu\\TopMenu.js":"6","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\SmartUndoManager.js":"7","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\Group\\Group.js":"8","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\EditManager\\EditManager.js":"9","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\SearchBar\\SearchBar.js":"10","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\GroupManager\\GroupManager.js":"11","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\TopMenu\\ActiveGroup\\ActiveGroup.js":"12","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\FileManager\\FileManager.js":"13","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\Group\\Edit\\Edit.js":"14","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\Edit.js":"15"},{"size":255,"mtime":1618195648909,"results":"16","hashOfConfig":"17"},{"size":917,"mtime":1618195648897,"results":"18","hashOfConfig":"17"},{"size":435,"mtime":1618195648898,"results":"19","hashOfConfig":"17"},{"size":3976,"mtime":1618195648909,"results":"20","hashOfConfig":"17"},{"size":650,"mtime":1618298530457,"results":"21","hashOfConfig":"17"},{"size":7449,"mtime":1618294469405,"results":"22","hashOfConfig":"17"},{"size":166,"mtime":1618195648901,"results":"23","hashOfConfig":"17"},{"size":1778,"mtime":1618195648903,"results":"24","hashOfConfig":"17"},{"size":3630,"mtime":1618195648900,"results":"25","hashOfConfig":"17"},{"size":1008,"mtime":1618195648905,"results":"26","hashOfConfig":"17"},{"size":3115,"mtime":1618195648901,"results":"27","hashOfConfig":"17"},{"size":1064,"mtime":1618195648907,"results":"28","hashOfConfig":"17"},{"size":2135,"mtime":1618195648898,"results":"29","hashOfConfig":"17"},{"size":1006,"mtime":1618195648903,"results":"30","hashOfConfig":"17"},{"size":1000,"mtime":1618195648899,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"e5ovaw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\index.js",[],["67","68"],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\App.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\GroupContext.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\UndoHistory\\UndoHistory.js",["69"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { Modal, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport './UndoHistory.css';\r\nimport Group from '../Group/Group';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport {\r\n  deleteEdits,\r\n  moveEdits\r\n} from '../../backend/SmartUndoManager/EditManager/EditManager';\r\nimport { deleteGroup } from '../../backend/SmartUndoManager/GroupManager/GroupManager';\r\nimport { GroupContext } from '../../GroupContext';\r\n\r\nexport let clickedEdits = [];\r\nexport let clickedGroups = [];\r\n\r\nconst UndoHistory = ({ forceUpdate }) => {\r\n  const [groupDict, setGroupDict] = useContext(GroupContext);\r\n  const [moveShow, setMoveShow] = useState(false);\r\n\r\n  let groupNameInput = React.createRef();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('groupDict', JSON.stringify(groupDict));\r\n  }, [forceUpdate]);\r\n\r\n  const deleteClicked = () => {\r\n    try {\r\n      if (clickedGroups[0]) {\r\n        clickedGroups.forEach((group) => {\r\n          deleteGroup(group);\r\n          //if clickedEdits were deleted in clickedGroup\r\n          if (clickedEdits[0]) {\r\n            clickedEdits.forEach((edit) => {\r\n              //remove edit from the clickedEdits\r\n              if (edit.groupName === group) {\r\n                const index = clickedEdits.indexOf(edit);\r\n                if (index > -1) {\r\n                  clickedEdits.splice(index, 1);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n        clickedGroups = [];\r\n      }\r\n      if (clickedEdits[0]) {\r\n        deleteEdits(clickedEdits);\r\n        clickedEdits = [];\r\n      }\r\n      setGroupDict(groupDict);\r\n      forceUpdate();\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h5>Undo History</h5>\r\n\r\n      <div className=\"history\">\r\n        <SearchBar>\r\n          {/*TODO: collapse group*/}\r\n          {Object.keys(groupDict).map((title) => {\r\n            return (\r\n              <Group\r\n                title={title}\r\n                key={title}\r\n                edits={groupDict[title]}\r\n                forceUpdate={forceUpdate}\r\n              />\r\n            );\r\n          })}\r\n        </SearchBar>\r\n      </div>\r\n\r\n      <div className=\"buttonGroup\">\r\n        <button onClick={() => setMoveShow(true)}>Move</button>\r\n        <button onClick={deleteClicked}>Delete</button>\r\n        <button id=\"mainButton\">Undo</button>\r\n      </div>\r\n      <Modal\r\n        animation={false}\r\n        size=\"sm\"\r\n        show={moveShow}\r\n        onHide={() => setMoveShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n            Move to Group\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                Group name\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              aria-label=\"groupName\"\r\n              aria-describedby=\"inputGroup-sizing-sm\"\r\n              ref={groupNameInput}\r\n            />\r\n          </InputGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              try {\r\n                moveEdits(groupNameInput.current.value, clickedEdits);\r\n                setGroupDict(groupDict);\r\n                forceUpdate();\r\n                //after moving edits, it unselects everything\r\n                clickedEdits = [];\r\n                clickedGroups = [];\r\n                setMoveShow(false);\r\n              } catch (err) {\r\n                alert(err);\r\n              }\r\n            }}>\r\n            Move to Group\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UndoHistory;\r\n","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\TextEditor\\TextEditor.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\TopMenu\\TopMenu.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\SmartUndoManager.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\Group\\Group.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\EditManager\\EditManager.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\GroupManager\\GroupManager.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\TopMenu\\ActiveGroup\\ActiveGroup.js",["70"],"import React, { useEffect, useState } from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport './ActiveGroup.css';\r\n\r\nconst ActiveGroup = ({ groupDict, forceUpdate }) => {\r\n  const [activeGroup, setActiveGroup] = useState('Default');\r\n\r\n  //change the active group when a group gets deleted if that group happens to be the active one.\r\n  useEffect(() => {\r\n    if (!(activeGroup in groupDict)) {\r\n      setActiveGroup('Default');\r\n    }\r\n  }, [forceUpdate]);\r\n\r\n  return (\r\n    <div className=\"activeDropdown\">\r\n      <Dropdown drop=\"left\">\r\n        <Dropdown.Toggle id=\"toggle\">{activeGroup}</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {Object.keys(groupDict).map((title, index) => {\r\n            return (\r\n              <Dropdown.Item\r\n                onClick={() => setActiveGroup(title)}\r\n                eventKey={index}\r\n                key={index}>\r\n                {title}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveGroup;\r\n","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\FileManager\\FileManager.js",[],"C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\components\\Group\\Edit\\Edit.js",["71"],"import React, { useState, useEffect } from 'react';\r\nimport './Edit.css';\r\nimport { clickedEdits } from '../../UndoHistory/UndoHistory';\r\n\r\nconst Edit = ({ edit, groupIsClicked }) => {\r\n  const [isClicked, setIsClicked] = useState(groupIsClicked);\r\n  useEffect(() => {\r\n    setIsClicked(groupIsClicked);\r\n    //if it group is clicked, but edit wasn't, add edit\r\n    if (groupIsClicked && !isClicked) {\r\n      clickedEdits.push(edit);\r\n    } else if (!groupIsClicked) {\r\n      clickedEdits.pop(edit);\r\n    }\r\n  }, [groupIsClicked]);\r\n\r\n  return (\r\n    <div\r\n      className={isClicked ? 'edit active' : 'edit'}\r\n      onClick={() => {\r\n        if (!groupIsClicked) {\r\n          setIsClicked(!isClicked);\r\n          //if it wasn't clicked, it will be now\r\n          if (!isClicked) {\r\n            clickedEdits.push(edit);\r\n          } else {\r\n            clickedEdits.pop(edit);\r\n          }\r\n        }\r\n      }}>\r\n      <p className=\"editName\">{edit.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\Anthony's PC\\Desktop\\ButterflyEffectEditor\\src\\backend\\SmartUndoManager\\Edit.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":24,"column":6,"nodeType":"80","endLine":24,"endColumn":19,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":13,"column":6,"nodeType":"80","endLine":13,"endColumn":19,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"84","line":15,"column":6,"nodeType":"80","endLine":15,"endColumn":22,"suggestions":"85"},{"ruleId":"74","replacedBy":"86"},{"ruleId":"76","replacedBy":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'groupDict'. Either include it or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has missing dependencies: 'activeGroup' and 'groupDict'. Either include them or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'edit' and 'isClicked'. Either include them or remove the dependency array.",["92"],["88"],["89"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [forceUpdate, groupDict]",{"range":"99","text":"100"},"Update the dependencies array to be: [activeGroup, forceUpdate, groupDict]",{"range":"101","text":"102"},"Update the dependencies array to be: [edit, groupIsClicked, isClicked]",{"range":"103","text":"104"},[867,880],"[forceUpdate, groupDict]",[454,467],"[activeGroup, forceUpdate, groupDict]",[513,529],"[edit, groupIsClicked, isClicked]"]